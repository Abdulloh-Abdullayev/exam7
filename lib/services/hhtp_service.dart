import 'dart:convert';
import 'package:exam7/models/List_model.dart';
import 'package:exam7/models/one_model.dart';
import 'package:http/http.dart';

class Network {

  static String BASE = "622ad7d614ccb950d226bc5c.mockapi.io";

  static Map<String, String> headers = {'Content-type': 'application/json; charset=UTF-8'};

  /* http apis*/

  static String API_LIST = "/Exam";
  static String API_CREATE = "/Exam";
  static String API_PUT = "/Exam/";
  static String API_DELETE = "/Exam/";

  /* Http Requests */

  static Future<String?> GET(String api, Map<String, String> params) async {
    var uri = Uri.https(BASE, api, params); // http or https
    var response = await get(uri, headers: headers);
    if(response.statusCode == 200){
      return response.body;
    }
    return null;
  }

  static Future<String?> POST(String api, Map<String, String> params) async {
    var uri = Uri.https(BASE, api,); // http or https
    var response = await post(uri, headers: headers, body: jsonEncode(params));
    if(response.statusCode == 200 || response.statusCode == 201){
      return response.body;
    }
    return null;
  }

  static Future<String?> PUT(String api, Map<String, String> params) async {
    var uri = Uri.https(BASE, api,); // http or https
    var response = await put(uri, headers: headers, body: jsonEncode(params));
    if(response.statusCode == 200 || response.statusCode == 201){
      return response.body;
    }
    return null;
  }

  static Future<String?> DEL(String api, Map<String, String> params) async {
    var uri = Uri.https(BASE, api,); // http or https
    var response = await delete(uri, headers: headers, body: jsonEncode(params));
    if(response.statusCode == 200 || response.statusCode == 201){
      return response.body;
    }
    return null;
  }

  /* http params */

  static Map<String, String> paramEmpty(){
    Map<String, String> params = Map();
    return params;
  }

  //static Map<String, String> paramCreate(LIstM lIstM){
  //   Map<String, String> params = Map();
  //   params.addAll({
  //     'id':id
  //     'name':name,
  //     'number':number.toString(),
  //   });
  //   return params;
  // }

  /// parse

  static LIstM parseEmpList(String response){
    dynamic json = jsonDecode(response);
    var data = LIstM.fromJson(json);
    return data;
  }

  static Autogenerated parseEmpOne(String body){
    dynamic json = jsonDecode(body);
    var data = Autogenerated.fromJson(json);
    return data;
  }


}